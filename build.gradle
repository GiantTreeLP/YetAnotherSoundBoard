import java.util.regex.Pattern

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.0.0'
    }
}

allprojects {
    repositories {
        jcenter()
    }
    task('increaseVersionCode') << {
        def manifestFile = file("src\\main\\AndroidManifest.xml")
        def patternVersionNumber = Pattern.compile("versionName=\"(\\d+)\\.(\\d+)\\.(\\d+)\"")
        def manifestText = manifestFile.getText()
        def matcherVersionNumber = patternVersionNumber.matcher(manifestText)
        matcherVersionNumber.find()
        def majorVersion = Integer.parseInt(matcherVersionNumber.group(1))
        def minorVersion = Integer.parseInt(matcherVersionNumber.group(2))
        def pointVersion = Integer.parseInt(matcherVersionNumber.group(3))

        def mVersionName = majorVersion + "." + minorVersion + "." + pointVersion
        def mNextVersionName = majorVersion + "." + (minorVersion + 1) + "." + pointVersion
        def manifestContent = matcherVersionNumber.replaceAll("versionName=\"" + mNextVersionName + "\"")
        def patternVersionCode = Pattern.compile("versionCode=\"(\\d+)\"")
        def matcherVersionCode = patternVersionCode.matcher(manifestContent)
        matcherVersionCode.find()
        def versionCode = Integer.parseInt(matcherVersionCode.group(1))
        manifestContent = matcherVersionCode.replaceAll("versionCode=\"" + versionCode + "\"")
        println(":incrementVersionName - current versionName=" + mVersionName)
        println(":incrementVersionName - new versionName=" + mNextVersionName)
        manifestFile.write(manifestContent);
    }

    task('increaseDebugVersionCode') << {
        def manifestFile = file("src\\main\\AndroidManifest.xml")
        def patternVersionNumber = Pattern.compile("versionName=\"(\\d+)\\.(\\d+)\\.(\\d+)\"")
        def manifestText = manifestFile.getText()
        def matcherVersionNumber = patternVersionNumber.matcher(manifestText)
        matcherVersionNumber.find()
        def majorVersion = Integer.parseInt(matcherVersionNumber.group(1))
        def minorVersion = Integer.parseInt(matcherVersionNumber.group(2))
        def pointVersion = Integer.parseInt(matcherVersionNumber.group(3))

        def mVersionName = majorVersion + "." + minorVersion + "." + pointVersion
        def mNextVersionName = majorVersion + "." + minorVersion + "." + (pointVersion + 1)
        def manifestContent = matcherVersionNumber.replaceAll("versionName=\"" + mNextVersionName + "\"")

        def patternVersionCode = Pattern.compile("versionCode=\"(\\d+)\"")
        def matcherVersionCode = patternVersionCode.matcher(manifestContent)
        matcherVersionCode.find()
        def versionCode = Integer.parseInt(matcherVersionCode.group(1))
        manifestContent = matcherVersionCode.replaceAll("versionCode=\"" + ++versionCode + "\"")
        println(":incrementVersionName - current versionName=" + mVersionName)
        println(":incrementVersionName - new versionName=" + mNextVersionName)
        manifestFile.write(manifestContent);
    }

    tasks.whenTaskAdded { task ->
        if (task.name == 'generateDebugBuildConfig') {
            task.dependsOn 'increaseDebugVersionCode'
        }
    }
}
